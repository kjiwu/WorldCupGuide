<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ResourceFlowDirection" xml:space="preserve">
    <value>LeftToRight</value>
    <comment>Controls the FlowDirection for all elements in the RootFrame. Set to the traditional direction of this resource file's language</comment>
  </data>
  <data name="ResourceLanguage" xml:space="preserve">
    <value>en-US</value>
    <comment>Controls the Language and ensures that the font for all elements in the RootFrame aligns with the app's language. Set to the language code of this resource file's language.</comment>
  </data>
  <data name="ApplicationTitle" xml:space="preserve">
    <value>2014巴西世界杯32强对战表</value>
  </data>
  <data name="TimeZoneCaption" xml:space="preserve">
    <value>北京时间</value>
  </data>
  <data name="Algeria" xml:space="preserve">
    <value>阿尔及利亚</value>
  </data>
  <data name="America" xml:space="preserve">
    <value>美国</value>
  </data>
  <data name="Argentina" xml:space="preserve">
    <value>阿根廷</value>
  </data>
  <data name="Australia" xml:space="preserve">
    <value>澳大利亚</value>
  </data>
  <data name="Belgium" xml:space="preserve">
    <value>比利时</value>
  </data>
  <data name="BosniaHerzegovina" xml:space="preserve">
    <value>波黑</value>
  </data>
  <data name="Brazil" xml:space="preserve">
    <value>巴西</value>
  </data>
  <data name="Cameroon" xml:space="preserve">
    <value>喀麦隆</value>
  </data>
  <data name="Chile" xml:space="preserve">
    <value>智利</value>
  </data>
  <data name="Coast" xml:space="preserve">
    <value>科特迪瓦</value>
  </data>
  <data name="Columbia" xml:space="preserve">
    <value>哥伦比亚</value>
  </data>
  <data name="CostaRica" xml:space="preserve">
    <value>哥斯达黎加</value>
  </data>
  <data name="Croatia" xml:space="preserve">
    <value>克罗地亚</value>
  </data>
  <data name="Ecuador" xml:space="preserve">
    <value>厄瓜多尔</value>
  </data>
  <data name="England" xml:space="preserve">
    <value>英格兰</value>
  </data>
  <data name="France" xml:space="preserve">
    <value>法国</value>
  </data>
  <data name="Garner" xml:space="preserve">
    <value>加纳</value>
  </data>
  <data name="Germany" xml:space="preserve">
    <value>德国</value>
  </data>
  <data name="Greece" xml:space="preserve">
    <value>希腊</value>
  </data>
  <data name="Holland" xml:space="preserve">
    <value>荷兰</value>
  </data>
  <data name="Honduras" xml:space="preserve">
    <value>洪都拉斯</value>
  </data>
  <data name="Iran" xml:space="preserve">
    <value>伊朗</value>
  </data>
  <data name="Italy" xml:space="preserve">
    <value>意大利</value>
  </data>
  <data name="Japan" xml:space="preserve">
    <value>日本</value>
  </data>
  <data name="Korea" xml:space="preserve">
    <value>韩国</value>
  </data>
  <data name="Mexico" xml:space="preserve">
    <value>墨西哥</value>
  </data>
  <data name="Nigeria" xml:space="preserve">
    <value>尼日利亚</value>
  </data>
  <data name="Portugal" xml:space="preserve">
    <value>葡萄牙</value>
  </data>
  <data name="Russia" xml:space="preserve">
    <value>俄罗斯</value>
  </data>
  <data name="Spain" xml:space="preserve">
    <value>西班牙</value>
  </data>
  <data name="Switzerland" xml:space="preserve">
    <value>瑞士</value>
  </data>
  <data name="Uruguay" xml:space="preserve">
    <value>乌拉圭</value>
  </data>
  <data name="SetAlarm" xml:space="preserve">
    <value>设置提醒</value>
  </data>
  <data name="ShowTeamList" xml:space="preserve">
    <value>小组赛程</value>
  </data>
  <data name="ShowTimeList" xml:space="preserve">
    <value>日期赛程</value>
  </data>
  <data name="AlarmTitle" xml:space="preserve">
    <value>比赛提醒</value>
  </data>
  <data name="CancelAlarm" xml:space="preserve">
    <value>取消提醒</value>
  </data>
  <data name="AlarmContentFormat" xml:space="preserve">
    <value>{0}和{1}的比赛马上就要开始了</value>
  </data>
  <data name="Days" xml:space="preserve">
    <value>{0}天</value>
  </data>
  <data name="MatchingTitle" xml:space="preserve">
    <value>正在进行的比赛</value>
  </data>
  <data name="TimeDownTip" xml:space="preserve">
    <value>距离世界杯开幕还有</value>
  </data>
  <data name="QuitPrompt" xml:space="preserve">
    <value>确定要退出应用程序吗?</value>
  </data>
  <data name="GroupsFormat" xml:space="preserve">
    <value>{0}组</value>
  </data>
</root>